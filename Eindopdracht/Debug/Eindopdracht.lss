
Eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000040e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000039a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  0000040e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000040e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000440  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  0000047c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001052  00000000  00000000  00000534  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a68  00000000  00000000  00001586  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000737  00000000  00000000  00001fee  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b0  00000000  00000000  00002728  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006f8  00000000  00000000  000028d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003dc  00000000  00000000  00002fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  000033ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3e c0       	rjmp	.+124    	; 0xae <__vector_12>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a4 30       	cpi	r26, 0x04	; 4
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	48 d0       	rcall	.+144    	; 0x13a <main>
  aa:	75 c1       	rjmp	.+746    	; 0x396 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <__vector_12>:

uint16_t watchdog;
uint16_t duration;

ISR(TIMER1_COMPA_vect)
{
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	0b b6       	in	r0, 0x3b	; 59
  ba:	0f 92       	push	r0
  bc:	2f 93       	push	r18
  be:	3f 93       	push	r19
  c0:	4f 93       	push	r20
  c2:	5f 93       	push	r21
  c4:	6f 93       	push	r22
  c6:	7f 93       	push	r23
  c8:	8f 93       	push	r24
  ca:	9f 93       	push	r25
  cc:	af 93       	push	r26
  ce:	bf 93       	push	r27
  d0:	ef 93       	push	r30
  d2:	ff 93       	push	r31
	writeLedDisplay(duration);
  d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  d8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  dc:	e9 d0       	rcall	.+466    	; 0x2b0 <_Z15writeLedDisplayi>
}
  de:	ff 91       	pop	r31
  e0:	ef 91       	pop	r30
  e2:	bf 91       	pop	r27
  e4:	af 91       	pop	r26
  e6:	9f 91       	pop	r25
  e8:	8f 91       	pop	r24
  ea:	7f 91       	pop	r23
  ec:	6f 91       	pop	r22
  ee:	5f 91       	pop	r21
  f0:	4f 91       	pop	r20
  f2:	3f 91       	pop	r19
  f4:	2f 91       	pop	r18
  f6:	0f 90       	pop	r0
  f8:	0b be       	out	0x3b, r0	; 59
  fa:	0f 90       	pop	r0
  fc:	0f be       	out	0x3f, r0	; 63
  fe:	0f 90       	pop	r0
 100:	1f 90       	pop	r1
 102:	18 95       	reti

00000104 <_Z11init_timer1v>:

void init_timer1(){
	TCCR1A = 0x00; // set timer 1 a to
 104:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = (1 << CS12) | (1 << WGM12); //Compare mode and 256 prescaler
 106:	8c e0       	ldi	r24, 0x0C	; 12
 108:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1<< OCIE1A); //Init timer 1 a interupt
 10a:	87 b7       	in	r24, 0x37	; 55
 10c:	80 61       	ori	r24, 0x10	; 16
 10e:	87 bf       	out	0x37, r24	; 55
	OCR1A = 39062 / 10;
 110:	82 e4       	ldi	r24, 0x42	; 66
 112:	9f e0       	ldi	r25, 0x0F	; 15
 114:	9b bd       	out	0x2b, r25	; 43
 116:	8a bd       	out	0x2a, r24	; 42
 118:	08 95       	ret

0000011a <_Z7buzz_msi>:
}

void buzz_ms(int duration)
{
 11a:	cf 93       	push	r28
 11c:	df 93       	push	r29
 11e:	ec 01       	movw	r28, r24
	PORTA |= (1<<BUZZ);
 120:	8b b3       	in	r24, 0x1b	; 27
 122:	80 61       	ori	r24, 0x10	; 16
 124:	8b bb       	out	0x1b, r24	; 27
	wait(duration);
 126:	ce 01       	movw	r24, r28
 128:	5e d0       	rcall	.+188    	; 0x1e6 <_Z4waiti>
	PORTA &= ~(1<<BUZZ);
 12a:	8b b3       	in	r24, 0x1b	; 27
 12c:	8f 7e       	andi	r24, 0xEF	; 239
 12e:	8b bb       	out	0x1b, r24	; 27
	wait(duration);
 130:	ce 01       	movw	r24, r28
 132:	59 d0       	rcall	.+178    	; 0x1e6 <_Z4waiti>
}
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	08 95       	ret

0000013a <main>:

// Main function
int main(void)
{
	setup_segment_display();
 13a:	00 d1       	rcall	.+512    	; 0x33c <_Z21setup_segment_displayv>
	watchdog = 0;
 13c:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <watchdog+0x1>
 140:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <watchdog>
	duration = 0;
 144:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 148:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>

	DDRC |= (1 << TRIG);
 14c:	84 b3       	in	r24, 0x14	; 20
 14e:	80 62       	ori	r24, 0x20	; 32
 150:	84 bb       	out	0x14, r24	; 20
	DDRC &= ~(0 << ECHO);
 152:	84 b3       	in	r24, 0x14	; 20
 154:	84 bb       	out	0x14, r24	; 20
	DDRA |= (1 << BUZZ);
 156:	8a b3       	in	r24, 0x1a	; 26
 158:	80 61       	ori	r24, 0x10	; 16
	
	init_timer1();
 15a:	8a bb       	out	0x1a, r24	; 26
 15c:	d3 df       	rcall	.-90     	; 0x104 <_Z11init_timer1v>
	
	sei(); //init interupts
 15e:	78 94       	sei
	
	while (1)
	{
		PORTC |= (1 << TRIG); //TRIGGER HIGH
 160:	85 b3       	in	r24, 0x15	; 21
 162:	80 62       	ori	r24, 0x20	; 32
 164:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 166:	24 e6       	ldi	r18, 0x64	; 100
 168:	2a 95       	dec	r18
 16a:	f1 f7       	brne	.-4      	; 0x168 <main+0x2e>
		_delay_us(30);
		PORTC &= ~(1 << TRIG); //IF TRIGGER HIGH, TRIGGER LOW
 16c:	85 b3       	in	r24, 0x15	; 21
 16e:	8f 7d       	andi	r24, 0xDF	; 223
 170:	85 bb       	out	0x15, r24	; 21
 172:	84 e6       	ldi	r24, 0x64	; 100
 174:	8a 95       	dec	r24
 176:	f1 f7       	brne	.-4      	; 0x174 <main+0x3a>
		_delay_us(30);
	
		while (PINC & (1 << ECHO))
 178:	9c 9b       	sbis	0x13, 4	; 19
 17a:	1d c0       	rjmp	.+58     	; 0x1b6 <main+0x7c>
		{
			watchdog++;
 17c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <watchdog>
 180:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <watchdog+0x1>
 184:	01 96       	adiw	r24, 0x01	; 1
 186:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <watchdog+0x1>
 18a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <watchdog>
			duration++;
 18e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 192:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 196:	2f 5f       	subi	r18, 0xFF	; 255
 198:	3f 4f       	sbci	r19, 0xFF	; 255
 19a:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 19e:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
			
			if (watchdog > 20000)
 1a2:	81 32       	cpi	r24, 0x21	; 33
 1a4:	9e 44       	sbci	r25, 0x4E	; 78
 1a6:	38 f4       	brcc	.+14     	; 0x1b6 <main+0x7c>
 1a8:	89 ef       	ldi	r24, 0xF9	; 249
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <main+0x72>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <main+0x78>
 1b2:	00 00       	nop
 1b4:	e1 cf       	rjmp	.-62     	; 0x178 <main+0x3e>
				break;
			}
			_delay_us(100);
		}

		if (watchdog < 20000)
 1b6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <watchdog>
 1ba:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <watchdog+0x1>
 1be:	80 32       	cpi	r24, 0x20	; 32
 1c0:	9e 44       	sbci	r25, 0x4E	; 78
 1c2:	60 f4       	brcc	.+24     	; 0x1dc <main+0xa2>
		{
			
			buzz_ms(duration * 5);
 1c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1c8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1cc:	9c 01       	movw	r18, r24
 1ce:	22 0f       	add	r18, r18
 1d0:	33 1f       	adc	r19, r19
 1d2:	22 0f       	add	r18, r18
 1d4:	33 1f       	adc	r19, r19
 1d6:	82 0f       	add	r24, r18
 1d8:	93 1f       	adc	r25, r19
 1da:	9f df       	rcall	.-194    	; 0x11a <_Z7buzz_msi>
			
		}
		duration = 0;
 1dc:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1e0:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	init_timer1();
	
	sei(); //init interupts
	
	while (1)
 1e4:	bd cf       	rjmp	.-134    	; 0x160 <main+0x26>

000001e6 <_Z4waiti>:
 1e6:	20 e0       	ldi	r18, 0x00	; 0
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	28 17       	cp	r18, r24
 1ec:	39 07       	cpc	r19, r25
 1ee:	4c f4       	brge	.+18     	; 0x202 <_Z4waiti+0x1c>
 1f0:	e3 ec       	ldi	r30, 0xC3	; 195
 1f2:	f9 e0       	ldi	r31, 0x09	; 9
 1f4:	31 97       	sbiw	r30, 0x01	; 1
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <_Z4waiti+0xe>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <_Z4waiti+0x14>
 1fa:	00 00       	nop
 1fc:	2f 5f       	subi	r18, 0xFF	; 255
 1fe:	3f 4f       	sbci	r19, 0xFF	; 255
 200:	f4 cf       	rjmp	.-24     	; 0x1ea <_Z4waiti+0x4>
 202:	08 95       	ret

00000204 <_Z14spi_masterInitv>:
 204:	8f ef       	ldi	r24, 0xFF	; 255
 206:	87 bb       	out	0x17, r24	; 23
 208:	87 b3       	in	r24, 0x17	; 23
 20a:	87 7f       	andi	r24, 0xF7	; 247
 20c:	87 bb       	out	0x17, r24	; 23
 20e:	88 b3       	in	r24, 0x18	; 24
 210:	81 60       	ori	r24, 0x01	; 1
 212:	88 bb       	out	0x18, r24	; 24
 214:	82 e5       	ldi	r24, 0x52	; 82
 216:	8d b9       	out	0x0d, r24	; 13
 218:	08 95       	ret

0000021a <_Z9spi_writeh>:
 21a:	8f b9       	out	0x0f, r24	; 15
 21c:	77 9b       	sbis	0x0e, 7	; 14
 21e:	fe cf       	rjmp	.-4      	; 0x21c <_Z9spi_writeh+0x2>
 220:	08 95       	ret

00000222 <_Z15spi_slaveSelecth>:
 222:	98 b3       	in	r25, 0x18	; 24
 224:	21 e0       	ldi	r18, 0x01	; 1
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	02 c0       	rjmp	.+4      	; 0x22e <_Z15spi_slaveSelecth+0xc>
 22a:	22 0f       	add	r18, r18
 22c:	33 1f       	adc	r19, r19
 22e:	8a 95       	dec	r24
 230:	e2 f7       	brpl	.-8      	; 0x22a <_Z15spi_slaveSelecth+0x8>
 232:	20 95       	com	r18
 234:	29 23       	and	r18, r25
 236:	28 bb       	out	0x18, r18	; 24
 238:	08 95       	ret

0000023a <_Z17spi_slaveDeSelecth>:
 23a:	98 b3       	in	r25, 0x18	; 24
 23c:	21 e0       	ldi	r18, 0x01	; 1
 23e:	30 e0       	ldi	r19, 0x00	; 0
 240:	02 c0       	rjmp	.+4      	; 0x246 <_Z17spi_slaveDeSelecth+0xc>
 242:	22 0f       	add	r18, r18
 244:	33 1f       	adc	r19, r19
 246:	8a 95       	dec	r24
 248:	e2 f7       	brpl	.-8      	; 0x242 <_Z17spi_slaveDeSelecth+0x8>
 24a:	29 2b       	or	r18, r25
 24c:	28 bb       	out	0x18, r18	; 24
 24e:	08 95       	ret

00000250 <_Z17displayDriverInitv>:
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	e7 df       	rcall	.-50     	; 0x222 <_Z15spi_slaveSelecth>
 254:	89 e0       	ldi	r24, 0x09	; 9
 256:	e1 df       	rcall	.-62     	; 0x21a <_Z9spi_writeh>
 258:	8f ef       	ldi	r24, 0xFF	; 255
 25a:	df df       	rcall	.-66     	; 0x21a <_Z9spi_writeh>
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	ed df       	rcall	.-38     	; 0x23a <_Z17spi_slaveDeSelecth>
 260:	80 e0       	ldi	r24, 0x00	; 0
 262:	df df       	rcall	.-66     	; 0x222 <_Z15spi_slaveSelecth>
 264:	8a e0       	ldi	r24, 0x0A	; 10
 266:	d9 df       	rcall	.-78     	; 0x21a <_Z9spi_writeh>
 268:	8f e0       	ldi	r24, 0x0F	; 15
 26a:	d7 df       	rcall	.-82     	; 0x21a <_Z9spi_writeh>
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	e5 df       	rcall	.-54     	; 0x23a <_Z17spi_slaveDeSelecth>
 270:	80 e0       	ldi	r24, 0x00	; 0
 272:	d7 df       	rcall	.-82     	; 0x222 <_Z15spi_slaveSelecth>
 274:	8b e0       	ldi	r24, 0x0B	; 11
 276:	d1 df       	rcall	.-94     	; 0x21a <_Z9spi_writeh>
 278:	83 e0       	ldi	r24, 0x03	; 3
 27a:	cf df       	rcall	.-98     	; 0x21a <_Z9spi_writeh>
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	dd df       	rcall	.-70     	; 0x23a <_Z17spi_slaveDeSelecth>
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	cf df       	rcall	.-98     	; 0x222 <_Z15spi_slaveSelecth>
 284:	8c e0       	ldi	r24, 0x0C	; 12
 286:	c9 df       	rcall	.-110    	; 0x21a <_Z9spi_writeh>
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	c7 df       	rcall	.-114    	; 0x21a <_Z9spi_writeh>
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	d5 cf       	rjmp	.-86     	; 0x23a <_Z17spi_slaveDeSelecth>
 290:	08 95       	ret

00000292 <_Z13spi_writeWordhh>:
 292:	cf 93       	push	r28
 294:	df 93       	push	r29
 296:	d8 2f       	mov	r29, r24
 298:	c6 2f       	mov	r28, r22
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	c2 df       	rcall	.-124    	; 0x222 <_Z15spi_slaveSelecth>
 29e:	8d 2f       	mov	r24, r29
 2a0:	bc df       	rcall	.-136    	; 0x21a <_Z9spi_writeh>
 2a2:	8c 2f       	mov	r24, r28
 2a4:	ba df       	rcall	.-140    	; 0x21a <_Z9spi_writeh>
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	c8 df       	rcall	.-112    	; 0x23a <_Z17spi_slaveDeSelecth>
 2aa:	df 91       	pop	r29
 2ac:	cf 91       	pop	r28
 2ae:	08 95       	ret

000002b0 <_Z15writeLedDisplayi>:
 2b0:	1f 93       	push	r17
 2b2:	cf 93       	push	r28
 2b4:	df 93       	push	r29
 2b6:	9c 01       	movw	r18, r24
 2b8:	2a 51       	subi	r18, 0x1A	; 26
 2ba:	3c 4f       	sbci	r19, 0xFC	; 252
 2bc:	25 3f       	cpi	r18, 0xF5	; 245
 2be:	3a 42       	sbci	r19, 0x2A	; 42
 2c0:	48 f5       	brcc	.+82     	; 0x314 <_Z15writeLedDisplayi+0x64>
 2c2:	99 23       	and	r25, r25
 2c4:	34 f4       	brge	.+12     	; 0x2d2 <_Z15writeLedDisplayi+0x22>
 2c6:	91 95       	neg	r25
 2c8:	81 95       	neg	r24
 2ca:	91 09       	sbc	r25, r1
 2cc:	21 e0       	ldi	r18, 0x01	; 1
 2ce:	30 e0       	ldi	r19, 0x00	; 0
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <_Z15writeLedDisplayi+0x26>
 2d2:	20 e0       	ldi	r18, 0x00	; 0
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	68 ee       	ldi	r22, 0xE8	; 232
 2d8:	73 e0       	ldi	r23, 0x03	; 3
 2da:	36 d0       	rcall	.+108    	; 0x348 <__divmodhi4>
 2dc:	46 2f       	mov	r20, r22
 2de:	64 e6       	ldi	r22, 0x64	; 100
 2e0:	70 e0       	ldi	r23, 0x00	; 0
 2e2:	32 d0       	rcall	.+100    	; 0x348 <__divmodhi4>
 2e4:	16 2f       	mov	r17, r22
 2e6:	6a e0       	ldi	r22, 0x0A	; 10
 2e8:	70 e0       	ldi	r23, 0x00	; 0
 2ea:	2e d0       	rcall	.+92     	; 0x348 <__divmodhi4>
 2ec:	d6 2f       	mov	r29, r22
 2ee:	c8 2f       	mov	r28, r24
 2f0:	23 2b       	or	r18, r19
 2f2:	21 f0       	breq	.+8      	; 0x2fc <_Z15writeLedDisplayi+0x4c>
 2f4:	6a e0       	ldi	r22, 0x0A	; 10
 2f6:	84 e0       	ldi	r24, 0x04	; 4
 2f8:	cc df       	rcall	.-104    	; 0x292 <_Z13spi_writeWordhh>
 2fa:	03 c0       	rjmp	.+6      	; 0x302 <_Z15writeLedDisplayi+0x52>
 2fc:	64 2f       	mov	r22, r20
 2fe:	84 e0       	ldi	r24, 0x04	; 4
 300:	c8 df       	rcall	.-112    	; 0x292 <_Z13spi_writeWordhh>
 302:	61 2f       	mov	r22, r17
 304:	83 e0       	ldi	r24, 0x03	; 3
 306:	c5 df       	rcall	.-118    	; 0x292 <_Z13spi_writeWordhh>
 308:	6d 2f       	mov	r22, r29
 30a:	82 e0       	ldi	r24, 0x02	; 2
 30c:	c2 df       	rcall	.-124    	; 0x292 <_Z13spi_writeWordhh>
 30e:	6c 2f       	mov	r22, r28
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	bf df       	rcall	.-130    	; 0x292 <_Z13spi_writeWordhh>
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	1f 91       	pop	r17
 31a:	08 95       	ret

0000031c <_Z13clear_displayv>:
 31c:	cf 93       	push	r28
 31e:	c1 e0       	ldi	r28, 0x01	; 1
 320:	c5 30       	cpi	r28, 0x05	; 5
 322:	50 f4       	brcc	.+20     	; 0x338 <_Z13clear_displayv+0x1c>
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	7d df       	rcall	.-262    	; 0x222 <_Z15spi_slaveSelecth>
 328:	8c 2f       	mov	r24, r28
 32a:	77 df       	rcall	.-274    	; 0x21a <_Z9spi_writeh>
 32c:	80 e0       	ldi	r24, 0x00	; 0
 32e:	75 df       	rcall	.-278    	; 0x21a <_Z9spi_writeh>
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	83 df       	rcall	.-250    	; 0x23a <_Z17spi_slaveDeSelecth>
 334:	cf 5f       	subi	r28, 0xFF	; 255
 336:	f4 cf       	rjmp	.-24     	; 0x320 <_Z13clear_displayv+0x4>
 338:	cf 91       	pop	r28
 33a:	08 95       	ret

0000033c <_Z21setup_segment_displayv>:
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	87 bb       	out	0x17, r24	; 23
 340:	61 df       	rcall	.-318    	; 0x204 <_Z14spi_masterInitv>
 342:	86 df       	rcall	.-244    	; 0x250 <_Z17displayDriverInitv>
 344:	eb cf       	rjmp	.-42     	; 0x31c <_Z13clear_displayv>
 346:	08 95       	ret

00000348 <__divmodhi4>:
 348:	97 fb       	bst	r25, 7
 34a:	07 2e       	mov	r0, r23
 34c:	16 f4       	brtc	.+4      	; 0x352 <__divmodhi4+0xa>
 34e:	00 94       	com	r0
 350:	06 d0       	rcall	.+12     	; 0x35e <__divmodhi4_neg1>
 352:	77 fd       	sbrc	r23, 7
 354:	08 d0       	rcall	.+16     	; 0x366 <__divmodhi4_neg2>
 356:	0b d0       	rcall	.+22     	; 0x36e <__udivmodhi4>
 358:	07 fc       	sbrc	r0, 7
 35a:	05 d0       	rcall	.+10     	; 0x366 <__divmodhi4_neg2>
 35c:	3e f4       	brtc	.+14     	; 0x36c <__divmodhi4_exit>

0000035e <__divmodhi4_neg1>:
 35e:	90 95       	com	r25
 360:	81 95       	neg	r24
 362:	9f 4f       	sbci	r25, 0xFF	; 255
 364:	08 95       	ret

00000366 <__divmodhi4_neg2>:
 366:	70 95       	com	r23
 368:	61 95       	neg	r22
 36a:	7f 4f       	sbci	r23, 0xFF	; 255

0000036c <__divmodhi4_exit>:
 36c:	08 95       	ret

0000036e <__udivmodhi4>:
 36e:	aa 1b       	sub	r26, r26
 370:	bb 1b       	sub	r27, r27
 372:	51 e1       	ldi	r21, 0x11	; 17
 374:	07 c0       	rjmp	.+14     	; 0x384 <__udivmodhi4_ep>

00000376 <__udivmodhi4_loop>:
 376:	aa 1f       	adc	r26, r26
 378:	bb 1f       	adc	r27, r27
 37a:	a6 17       	cp	r26, r22
 37c:	b7 07       	cpc	r27, r23
 37e:	10 f0       	brcs	.+4      	; 0x384 <__udivmodhi4_ep>
 380:	a6 1b       	sub	r26, r22
 382:	b7 0b       	sbc	r27, r23

00000384 <__udivmodhi4_ep>:
 384:	88 1f       	adc	r24, r24
 386:	99 1f       	adc	r25, r25
 388:	5a 95       	dec	r21
 38a:	a9 f7       	brne	.-22     	; 0x376 <__udivmodhi4_loop>
 38c:	80 95       	com	r24
 38e:	90 95       	com	r25
 390:	bc 01       	movw	r22, r24
 392:	cd 01       	movw	r24, r26
 394:	08 95       	ret

00000396 <_exit>:
 396:	f8 94       	cli

00000398 <__stop_program>:
 398:	ff cf       	rjmp	.-2      	; 0x398 <__stop_program>
